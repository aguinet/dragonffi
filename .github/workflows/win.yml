name: Tests Windows

on:
  push:
    branches:
      - master
  pull_request:

jobs:
  build:

    runs-on: windows-latest
    strategy:
      matrix:
        python-version: [3.6, 3.7, 3.8]
        include:
          - python-version: 3.5
            VCVER: 14.0
          - python-version: 3.6
            VCVER: 14.16
          - python-version: 3.7
            VCVER: 14.16
          - python-version: 3.8
            VCVER: 14.16

    steps:
    - uses: actions/checkout@v2
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v1
      with:
        python-version: ${{ matrix.python-version }}
    - name: Install system dependencies
      run: |
        choco install miniconda3 ninja
        C:\tools\Miniconda3\Scripts\conda.exe install -c conda-forge llvm-utils==8.0.1 clangdev==8.0.1
        python -m pip install --upgrade pip
        python -m pip install lit purectypes==0.2 six wheel
        mkdir build
    - name: CMake + build
      working-directory: build
      run: |
        call "C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Auxiliary\Build\vcvarsall.bat" x64 -vcvars_ver=${{ matrix.VCVER }}
        cmake -DCMAKE_C_COMPILER=cl.exe -DCMAKE_CXX_COMPILER=cl.exe -DPYTHON_BINDINGS=OFF -DBUILD_TESTS=ON -DLLVM_CONFIG=C:/tools/Miniconda3/Library/bin/llvm-config.exe -DCMAKE_BUILD_TYPE=release -G Ninja ..
        ninja
      shell: cmd
    - name: Native tests
      working-directory: build
      run: |
        call "C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Auxiliary\Build\vcvarsall.bat" x64 -vcvars_ver=${{ matrix.VCVER }}
        lit -v tests
      shell: cmd
    - name: Python build + tests
      working-directory: bindings/python
      run: |
        call "C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Auxiliary\Build\vcvarsall.bat" x64 -vcvars_ver=${{ matrix.VCVER }}
        set LLVM_CONFIG=C:/tools/Miniconda3/Library/bin/llvm-config.exe
        set CC=cl.exe
        set CXX=cl.exe
        python .\setup.py install
        cd tests && python -m unittest discover .
      shell: cmd
    - name: Python wheel
      working-directory: bindings/python
      run: |
        call "C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Auxiliary\Build\vcvarsall.bat" x64 -vcvars_ver=${{ matrix.VCVER }}
        set LLVM_CONFIG=C:/tools/Miniconda3/Library/bin/llvm-config.exe
        set CC=cl.exe
        set CXX=cl.exe
        python .\setup.py bdist_wheel
      shell: cmd
    - uses: actions/upload-artifact@v1
      with:
        name: wheel
        path: bindings/python/dist/
