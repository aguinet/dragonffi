name: Python wheels (& publish)

on:
  push:
    branches:
      - master
  pull_request:
  release:
    types: [created]

jobs:
  build_llvm_win:
    name: Build release LLVM for Windows
    runs-on: windows-latest
    steps:
    - name: Cache LLVM
      id: cache-llvm
      uses: actions/cache@v2
      with:
        path: llvm/install
        # TODO: would be really better to add the hash of the LLVM commit cloned
        # TODO: add "14.16" as a variable easy to replace
        key: ${{ runner.os }}-llvm-release-10-msvc1416
    - name: Get LLVM
      if: steps.cache-llvm.outputs.cache-hit != 'true'
      uses: actions/checkout@v2
      with:
        repository: 'llvm/llvm-project'
        ref: 'release/10.x'
        path: 'llvm'
    - uses: ilammy/msvc-dev-cmd@v1
      if: steps.cache-llvm.outputs.cache-hit != 'true'
      with:
        toolset: "14.16"
    - name: Build LLVM
      if: steps.cache-llvm.outputs.cache-hit != 'true'
      run: |
        choco install ninja
        mkdir llvm/build
        mkdir llvm/install
        cd llvm/build
        cmake ../llvm -DLLVM_BUILD_EXAMPLES=OFF -DCLANG_ENABLE_ARCMT=OFF -DCLANG_ENABLE_STATIC_ANALYZER=OFF -DLLVM_BUILD_TOOLS=OFF -DCLANG_BUILD_TOOLS=OFF -DLLVM_INSTALL_UTILS=OFF -DLLVM_TARGETS_TO_BUILD="host" -DLLVM_ENABLE_PROJECTS=clang -DLLVM_ENABLE_BINDINGS=OFF -DCMAKE_C_COMPILER=cl.exe -DCMAKE_CXX_COMPILER=cl.exe -DCMAKE_BUILD_TYPE=Release -DCMAKE_INSTALL_PREFIX=../install -G Ninja
        ninja install
      shell: cmd

  build_osxwin:

    strategy:
      matrix:
        python-version: [3.5, 3.6, 3.7, 3.8]
        os:
          - windows-latest

    runs-on: ${{ matrix.os }}
    needs: build_llvm_win

    steps:
    - uses: actions/checkout@v2
    - uses: ilammy/msvc-dev-cmd@v1
      with:
        toolset: "14.16"
      if: runner.os == 'Windows'
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v1
      with:
        python-version: ${{ matrix.python-version }}
    - name: Cache LLVM
      if: runner.os == 'Windows'
      id: cache-llvm
      uses: actions/cache@v2
      with:
        path: llvm/install
        key: ${{ runner.os }}-llvm-release-10-msvc1416
    - name: Python dependencies
      run: |
        pip install wheel
    - name: Install Windows dependencies
      run: |
        choco install ninja wget
        echo LLVM_CONFIG=%GITHUB_WORKSPACE%/llvm/install/bin/llvm-config.exe >> %GITHUB_ENV%
      if: runner.os == 'Windows'
      shell: cmd
    - name: Install OSX dependencies
      run: |
        brew install cmake ninja
        sudo $CONDA/bin/conda install -c conda-forge llvmdev==10.0.1 clangdev==10.0.1
        echo "LLVM_CONFIG=$CONDA/bin/llvm-config" >> $GITHUB_ENV
      if: runner.os == 'macOS'
    - name: Build wheel
      working-directory: bindings/python
      run: |
        python ./setup.py bdist_wheel
    - uses: actions/upload-artifact@v1
      with:
        name: pydffi-wheels
        path: bindings/python/dist/
