name: Tests Linux

on:
  push:
    branches:
      - master
  pull_request:

jobs:
  build:

    runs-on: ubuntu-18.04
    strategy:
      matrix:
        python-version: [2.7, 3.5, 3.6, 3.7, 3.8]

    steps:
    - uses: actions/checkout@v2
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v1
      with:
        python-version: ${{ matrix.python-version }}
    - name: Install system dependencies
      run: |
        # Github's ubuntu 18 docker image provides broken clang/llvm 8
        # packages from whatever sources...
        # Remove the mess it has, purge every thing we don't need from
        # sources.list and reinstall the proper and clean clang/llvm packages
        # from ubuntu 18.
        sudo apt purge clang-8 llvm-8-dev libclang1-8 llvm-8 llvm-8-runtime libclang-common-8-dev llvm-8-dev libllvm8 liblldb-8
        sudo rm /etc/apt/sources.list.d/*
        sudo echo "deb http://archive.ubuntu.com/ubuntu bionic main multiverse restricted universe" | sudo tee /etc/apt/sources.list
        sudo echo "deb http://archive.ubuntu.com/ubuntu bionic-security main multiverse restricted universe" | sudo tee -a /etc/apt/sources.list
        sudo echo "deb http://archive.ubuntu.com/ubuntu bionic-updates main multiverse restricted universe " | sudo tee -a /etc/apt/sources.list
        sudo apt update && sudo apt install -y clang-8 llvm-8-tools llvm-8-dev libclang-8-dev ninja-build cmake
        python -m pip install lit 
        python -m pip install purectypes==0.2 six
        mkdir build
    - name: CMake
      working-directory: build
      run: |
        cmake \
          -DBUILD_SHARED_LIBS=ON \
          -DPYTHON_BINDINGS=ON \
          -DBUILD_TESTS=ON \
          -DLLVM_CONFIG=$(which llvm-config-8) -DCMAKE_BUILD_TYPE=debug \
          -G Ninja ..
    - name: Build
      working-directory: build
      run: |
        ninja
    - name: Tests
      working-directory: build
      run: |
        ninja check

    - name: Build Python wheel
      working-directory: bindings/python
      run: |
        LLVM_CONFIG=$(which llvm-config-8) python ./setup.py bdist_wheel

    - uses: actions/upload-artifact@v1
      with:
        name: wheel
        path: dist/
